### Keywords and Identifiers in Go

This article will introduce keywords and identifiers in Go.

@@@ #keyword
###+++++++++++ Keywords

Keywords are the special words which help compilers understand and parse user code.

Up to now (Go 1.25), Go has only 25 keywords:

@@@ .line-numbers;fixed-width
''' go
break     default      func    interface  select
case      defer        go      map        struct
chan      else         goto    package    switch
const     fallthrough  if      range      type
continue  for          import  return     var
'''

They can be categorized as four groups:
*
   `const`, `func`, `import`, `package`, `type` and `var`
   are used to declare all kinds of code elements in Go programs.
*
   `chan`, `interface`, `map` and `struct`
   are used as parts in some composite type denotations.
*
   `break`, `case`, `continue`, `default`, `else`, `fallthrough`,
   `for`, `goto`, `if`, `range`, `return`, `select` and `switch`
   are used to control flow of code.
*
   `defer` and `go` are also control flow keywords, but in other specific manners.
   They modify function calls, which we'll talk about in __this article__.

=== this article :: control-flows-more.html


These keywords will be explained in details in other articles.

@@@ #identifier
###+++++++++++ Identifiers

An identifier is a token which must be composed of Unicode letters,
Unicode digits and `_` (underscore), and start with
either an Unicode letter or `_`.
Here,
*
   Unicode letters mean the characters defined in the Letter categories
   %% Lu %%, %% Ll %%, %% Lt %%, %% Lm %%, or %% Lo %%.
*
   Unicode digits mean the characters defined
   in the Number category %% Nd %% of The Unicode Standard.

**keywords** can not be used as identifiers.

Identifier `_` is a special identifier, it is called **blank identifier**.

Later we will learn that all names of types, variables, constants, labels,
package names and package import names must be identifiers.

An identifier starting with an __Unicode upper case letter__
is called an **exported identifier**.
The word **%% exported %%** can be interpreted as
**%% public %%** in many other languages.
The identifiers which don't start with an Unicode upper case letter are called non-exported identifiers.
The word **%% non-exported %%** can be interpreted as
**%% private %%** in many other languages.
Currently (Go 1.25), eastern characters are viewed as non-exported letters.
Sometimes, non-exported identifiers are also called unexported identifiers.

=== Unicode upper case letter :: http://www.fileformat.info/info/unicode/category/Lu/list.htm

Here are some legal exported identifiers:
@@@ .line-numbers;fixed-width
''' go
Player_9
DoSomething
VERSION
Ĝo
Π
'''

Here are some legal non-exported identifiers:
@@@ .line-numbers;fixed-width
''' go
_
_status
memStat
book
π
一个类型
변수
エラー
'''

And here are some tokens which are illegal to be used as identifiers:
@@@ .line-numbers;fixed-width
''' go
// Starting with a Unicode digit.
123
3apples

// Containing Unicode characters not
// satisfying the requirements.
a.b
*ptr
$name
a@b.c

// These are keywords.
type
range
'''

